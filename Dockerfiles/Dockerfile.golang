# Run with
# VER=1.23.6 bash -c 'docker buildx build -t carlosedp/golang:$VER -t carlosedp/golang:"$(echo $VER |cut -d. -f1-2)" --build-arg=VERSION=$VER --platform linux/amd64,linux/arm64,linux/ppc64le,linux/riscv64,linux/arm --push -f Dockerfile.golang .'

FROM debian:sid-slim
ARG VERSION
ARG TARGETARCH

ENV GOLANG_VERSION=${VERSION}

RUN apt-get update && apt-get install -y ca-certificates curl libc6 --no-install-recommends && rm -rf /var/lib/apt/lists/*

RUN mkdir -p /usr/local && \
    set -eux; \
    URL="https://go.dev/dl";                                                     \
    if [ "$TARGETARCH" = "arm" ]; then export TARGETARCH=armv6l; fi &&           \
    curl -L $URL/go${GOLANG_VERSION}.linux-$TARGETARCH.tar.gz --output go${GOLANG_VERSION}.tar.gz && \
    tar vxf go${GOLANG_VERSION}.tar.gz -C /usr/local/ && \
    rm go${GOLANG_VERSION}.tar.gz

RUN export PATH="/usr/local/go/bin:$PATH"; \
    /usr/local/go/bin/go version

ENV GOPATH=/go
ENV PATH=${GOPATH}/bin:/usr/local/go/bin:${PATH}

RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
WORKDIR $GOPATH
